{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.service.ts","./src/app/covid/country/countrydailydeaths/countrydailydeaths.component.ts","./src/app/covid/country/countrydailydeaths/countrydailydeaths.component.html","./src/app/covid/country/countrytesting/countrytesting.component.ts","./src/app/covid/country/countrytesting/countrytesting.component.html","./src/app/covid/country/countrytotaldeaths/countrytotaldeaths.component.ts","./src/app/covid/country/countrytotaldeaths/countrytotaldeaths.component.html","./src/app/covid/state/statedeaths/statetotaldeaths.component.ts","./src/app/covid/state/statedeaths/statetotaldeaths.component.html","./src/app/covid/state/statehospitalized/statehospitalized.component.ts","./src/app/covid/state/statehospitalized/statehospitalized.component.html","./src/app/covid/state/stateicu/stateicu.component.ts","./src/app/covid/state/stateicu/stateicu.component.html","./src/app/covid/state/statetesting/statetesting.component.ts","./src/app/covid/state/statetesting/statetesting.component.html","./src/app/covid/state/stateventilator/stateventilator.component.ts","./src/app/covid/state/stateventilator/stateventilator.component.html","./src/app/covidtracking/covidtracking.service.ts","./src/app/google-chart/google-chart.service.ts","./src/app/http-interceptor.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string | undefined;\n  postRequestResponse: string | undefined;\n\n  constructor(private appService: AppService) {\n    this.appService.getWelcomeMessage().subscribe((data: any) => {\n      this.title = data.content;\n    });\n  }\n\n  /**\n   * This method is used to test the post request\n   */\n  public postData(): void {\n    this.appService.sendData().subscribe((data: any) => {\n      this.postRequestResponse = data.content;\n    });\n  }\n}\n","<div class='wrapper'>\n  <div class='selectorContainer'>\n      <a class='tablink' routerLink='/countrydeath' routerLinkActive='active'>Country Deaths</a>\n      <a class='tablink' routerLink='/countrydaily' routerLinkActive='active'>Country Daily</a>\n      <a class='tablink' routerLink='/countrytesting' routerLinkActive='active'>Country Testing</a>\n      <a class='tablink' routerLink='/statedeath' routerLinkActive='active'>Utah Daily Deaths</a>\n      <a class='tablink' routerLink='/statetesting' routerLinkActive='active'>Utah Testing</a>\n  </div>\n  <div class='displayContainer'>\n    <div class='headerContainer'>\n      <div class='headerText'>CoronaGraphs</div>\n    </div>\n    <div class='graphContainer'><router-outlet></router-outlet></div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HTTP_INTERCEPTORS, HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { AppHttpInterceptorService } from './http-interceptor.service';\nimport { CountryDailyDeathsComponent} from './covid/country/countrydailydeaths/countrydailydeaths.component';\nimport { CountryTotalDeathsComponent} from './covid/country/countrytotaldeaths/countrytotaldeaths.component';\nimport { CountryTestingComponent} from './covid/country/countrytesting/countrytesting.component';\nimport { StateTotalDeathsComponent} from './covid/state/statedeaths/statetotaldeaths.component';\nimport { StateHospitalizedComponent} from './covid/state/statehospitalized/statehospitalized.component';\nimport { StateIcuComponent } from './covid/state/stateicu/stateicu.component';\nimport { StateVentilatorComponent } from './covid/state/stateventilator/stateventilator.component';\nimport { StateTestingComponent } from './covid/state/statetesting/statetesting.component'\n\nconst routes: Routes = [\n  {\n    path: 'countrydeath',\n    component: CountryTotalDeathsComponent\n  },\n  {\n    path: 'countrydaily',\n    component: CountryDailyDeathsComponent\n  },\n  {\n    path: 'countrytesting',\n    component: CountryTestingComponent\n  },\n  {\n    path: 'statedeath',\n    component: StateTotalDeathsComponent\n  },\n  {\n    path: 'statetesting',\n    component: StateTestingComponent\n  },\n  {\n    path: 'statehospitalized',\n    component: StateHospitalizedComponent\n  },\n  {\n    path: '',\n    redirectTo: '/countrydeath',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountryDailyDeathsComponent,\n    CountryTotalDeathsComponent,\n    CountryTestingComponent,\n    StateTotalDeathsComponent,\n    StateTestingComponent,\n    StateHospitalizedComponent,\n    StateIcuComponent,\n    StateVentilatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'Csrf-Token',\n      headerName: 'Csrf-Token',\n    }),\n    RouterModule.forRoot(\n      routes,\n      {enableTracing: true}\n    ),\n  ],\n  providers: [\n    AppService,\n    {\n      multi: true,\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppHttpInterceptorService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/index';\n\n/**\n * Class representing application service.\n *\n * @class AppService.\n */\n@Injectable() \nexport class AppService {\n  private serviceUrl = '/api/summary';\n  private dataPostTestUrl = '/api/postTest';\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * Makes a http get request to retrieve the welcome message from the backend service.\n   */\n  public getWelcomeMessage() {\n    return this.http.get(this.serviceUrl).pipe(\n      map(response => response)\n    );\n  }\n\n  /**\n   * Makes a http post request to send some data to backend & get response.\n   */\n  public sendData(): Observable<any> {\n    return this.http.post(this.dataPostTestUrl, {});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from '../../../covidtracking/covidtracking.service';\n\nclass DailyDeaths {\n  public date: string = '';\n  public deaths: number = 0;\n  public day3sma: number = 0;\n  public day7sma: number = 0;\n  constructor(date: string, deaths: number, day3sma: number, day7sma: number) {\n    this.date = date;\n    this.deaths = deaths;\n    this.day3sma = day3sma;\n    this.day7sma = day7sma;\n  }\n};\n\n@Component({\n  selector: 'app-countrydailydeaths',\n  templateUrl: './countrydailydeaths.component.html',\n  styleUrls: ['./countrydailydeaths.component.css']\n})\nexport class CountryDailyDeathsComponent implements OnInit {\n  private gLib: any;\n\n  constructor(\n    route: ActivatedRoute,\n    private chartServices: GoogleChartService,\n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getCountryDaily();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  public getCountryDaily() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let dailyDeaths: DailyDeaths[] = [];\n      let startDate = this.convertDate(sorted[0].date.toString());\n      dailyDeaths.push(new DailyDeaths(startDate, sorted[0].death, sorted[0].death, sorted[0].death));\n      for (let i = 1; i < sorted.length; i++) {\n        let dateStr = this.convertDate(sorted[i].date.toString());\n        if (i > 2) {\n          let death3sma = (\n            sorted[i - 3].deathIncrease +\n            sorted[i - 2].deathIncrease +\n            sorted[i - 1].deathIncrease) / 3;\n          if (i > 7) {\n            let death7sma = (\n              sorted[i - 7].deathIncrease +\n              sorted[i - 6].deathIncrease +\n              sorted[i - 5].deathIncrease +\n              sorted[i - 4].deathIncrease +\n              sorted[i - 3].deathIncrease +\n              sorted[i - 2].deathIncrease +\n              sorted[i - 1].deathIncrease) / 7;\n            dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, death3sma, death7sma));\n          } else {\n            dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, death3sma, death3sma));\n          }\n\n        } else {\n          dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, sorted[i].deathIncrease, sorted[i].deathIncrease));\n        }\n      }\n\n      let rawData: any[][] = [['Date', 'Deaths', '3SMA', '7SMA']];\n      dailyDeaths.forEach((datum: DailyDeaths) => {\n        let bar = [datum.date, datum.deaths, datum.day3sma, datum.day7sma];\n        rawData.push(bar);\n      });\n\n      let options = {\n        title: 'Daily Deaths (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n        series: {\n          1: {\n            type: 'line',\n            color: 'green'\n          },\n          2: {\n            type: 'line',\n            color: 'orange'\n          }\n        }\n      }\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let dailyDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('dailyDeaths'));\n\n      dailyDeathChart.draw(newData, options);\n    })\n  }\n\n  public refreshDailyDeathChart() {\n  }\n}\n","<div id='dailyDeaths'></div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from 'src/app/covidtracking/covidtracking.service';\n\nclass DailyTesting {\n  public date: string = '';\n  public tests: number = 0;\n  public positive: number = 0;\n  public sma: number = 0;\n  constructor(date: string, tests: number, positive: number, sma: number) {\n    this.date = date;\n    this.tests = tests;\n    this.positive = positive;\n    this.sma = sma;\n  }\n};\n\nclass DailyPositives {\n  public date: string = '';\n  public positiveRate: number = 0;\n  public sma: number = 0;\n  constructor(date: string, positiveRate: number, sma: number) {\n    this.date = date;\n    this.positiveRate = positiveRate;\n    this.sma = sma;\n  }\n};\n\n@Component({\n  selector: 'app-countrytesting',\n  templateUrl: './countrytesting.component.html',\n  styleUrls: ['./countrytesting.component.css']\n})\nexport class CountryTestingComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute,\n    private chartServices: GoogleChartService,\n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getCountryDaily();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  public getCountryDaily() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      // Collect the data\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let dailyTesting: DailyTesting[] = [];\n      let dailyPositive: DailyPositives[] = [];\n      let startDate = this.convertDate(sorted[0].date.toString());\n      dailyTesting.push(new DailyTesting(startDate, sorted[0].totalTestResults, sorted[0].positive, sorted[0].negative));\n      let basePositiveRate = sorted[0].positiveIncrease / sorted[0].totalTestResultsIncrease;\n      dailyPositive.push(new DailyPositives(startDate, basePositiveRate, basePositiveRate));\n      for (let i = 1; i < sorted.length; i++) {\n        let dateStr = this.convertDate(sorted[i].date.toString());\n        let positiveRate = sorted[i].positiveIncrease / sorted[i].totalTestResultsIncrease;\n        if (i > 2) {\n          let positivesma = (\n            sorted[i - 3].positiveIncrease +\n            sorted[i - 2].positiveIncrease +\n            sorted[i - 1].positiveIncrease) / 3;\n          dailyTesting.push(new DailyTesting(dateStr, sorted[i].totalTestResultsIncrease, sorted[i].positiveIncrease, positivesma));\n\n          let positiveRate3Sma = (\n            sorted[i - 3].positiveIncrease / sorted[i - 3].totalTestResultsIncrease +\n            sorted[i - 2].positiveIncrease / sorted[i - 2].totalTestResultsIncrease +\n            sorted[i - 1].positiveIncrease / sorted[i - 1].totalTestResultsIncrease\n          ) / 3;\n          dailyPositive.push(new DailyPositives(dateStr, sorted[i].positiveIncrease / sorted[i].totalTestResultsIncrease, positiveRate3Sma));\n\n        } else {\n          dailyTesting.push(new DailyTesting(dateStr, sorted[i].positiveIncrease, sorted[i].positiveIncrease, sorted[i].positiveIncrease));\n          dailyPositive.push(new DailyPositives(dateStr, positiveRate, positiveRate));\n        }\n      }\n\n      let rawData: any[][] = [['Date', 'Positive', 'Tests', 'SMA']];\n      dailyTesting.forEach((datum: DailyTesting) => {\n        let data = [datum.date, datum.positive, datum.tests, datum.sma];\n        rawData.push(data);\n      });\n\n      let options = {\n        title: 'Daily Positive (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n        isStacked: true,\n        series: {\n          0: {\n            color: 'blue'\n          },\n          1: {\n            color: 'green'\n          },\n          2: {\n            type: 'line',\n            color: 'orange'\n          }\n        }\n      }\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let dailyPositiveChart = new this.gLib.visualization.ComboChart(document.getElementById('dailyTesting'));\n\n      dailyPositiveChart.draw(newData, options);\n    })\n  }\n\n}\n","<div id='dailyTesting'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from 'src/app/covidtracking/covidtracking.service';\n\nclass TotalDeaths {\n  public date: string = '';\n  public deaths: number = 0;\n  constructor(date: string, deaths: number) {\n    this.date = date;\n    this.deaths = deaths;\n  }\n};\n\n@Component({\n  selector: 'app-countrytotaldeaths',\n  templateUrl: './countrytotaldeaths.component.html',\n  styleUrls: ['./countrytotaldeaths.component.css']\n})\nexport class CountryTotalDeathsComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute,\n    private chartServices: GoogleChartService,\n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n  \n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getCountryDaily();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  public getCountryDaily() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      // Collect the data\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let rawData: any[][] = [['Date', 'Deaths']];\n      sorted.forEach( (d: USHistoricalDaily) => {\n        rawData.push( [this.convertDate(d.date.toString()), d.death]);\n\n      })\n\n      // Collect daily testing\n      let options = {\n        title: 'Total Deaths (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('totalDeaths'));\n\n      totalDeathChart.draw(newData, options);\n      })\n    }\n\n}\n","<div id='totalDeaths'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statedeaths',\n  templateUrl: './statetotaldeaths.component.html',\n  styleUrls: ['./statetotaldeaths.component.css']\n})\nexport class StateTotalDeathsComponent implements OnInit {\n  private gLib: any = null;\n  constructor(\n      route: ActivatedRoute, \n      private chartServices: GoogleChartService, \n      private covidTrackingServices: CovidTrackingService\n  ) {\n  }\n\n  ngOnInit() {\n      this.checkLoading();\n  }\n\n  private checkLoading() {\n      if(this.chartServices.getLoaded()) {\n          this.gLib = this.chartServices.getGoogle();\n          this.getStateHistorical();\n      } else {\n          // Check again in 3 seconds\n          setTimeout(this.checkLoading, 1000);\n      }\n  }\n\n  public convertDate(oldDate: string) {\n      return oldDate.slice(4,6) + '-' + oldDate.slice(6,8) + '-' + oldDate.slice(0,4);\n  }\n  \n  private getStateHistorical() {\n    let state='UT';\n    this.covidTrackingServices.getHistoricalByState(state).subscribe((data: StateHistorical[]) => {\n        const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n            return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n        });\n\n        let rawData: any[][] = [['Date','Deaths']];\n        stateData.forEach( (d: StateHistorical) => {\n            rawData.push( [this.convertDate(d.date.toString()), d.deathIncrease]);\n        });\n        let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n        let options = {\n            title: 'Daily Deaths (' + state + ')',\n            width: 1100,\n            height: 700,\n            seriesType: 'bars',\n        };\n\n        let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('stateDeaths'));\n\n        totalDeathChart.draw(chartData, options);\n\n    });\n  }\n}\n","<div id='stateDeaths'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statehospitalized',\n  templateUrl: './statehospitalized.component.html',\n  styleUrls: ['./statehospitalized.component.css']\n})\nexport class StateHospitalizedComponent implements OnInit {\n  private gLib: any = null;\n  constructor(\n    route: ActivatedRoute, \n    private chartServices: GoogleChartService, \n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getStateHistorical();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  private getStateHistorical() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      let rawData: any[][] = [['Date', 'Hospitalizations']];\n      stateData.forEach((d: StateHistorical) => {\n        rawData.push([this.convertDate(d.date.toString()), d.hospitalizedIncrease]);\n      });\n      let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n      let options = {\n        title: 'Currently In Hospital (UT)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('hospitalizations'));\n      totalDeathChart.draw(chartData, options);\n    });\n  }\n\n}\n","<div id=\"hospitalizations\"></div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-stateicu',\n  templateUrl: './stateicu.component.html',\n  styleUrls: ['./stateicu.component.css']\n})\nexport class StateIcuComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute, \n    private chartServices: GoogleChartService, \n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getStateHistorical();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  private getStateHistorical() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n    let rawData: any[][] = [['Date', 'ICU']];\n    stateData.forEach((d: StateHistorical) => {\n      rawData.push([this.convertDate(d.date.toString()), d.hospitalizedIncrease]);\n    });\n    let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n    let options = {\n      title: 'Currently in ICU (UT)',\n      width: 1100,\n      height: 700,\n      seriesType: 'bars',\n    };\n\n    let icuChart = new this.gLib.visualization.ComboChart(document.getElementById('icu'));\n\n    icuChart.draw(chartData, options);\n\n    });\n  }\n}\n","<div id=\"icu\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statetesting',\n  templateUrl: './statetesting.component.html',\n  styleUrls: ['./statetesting.component.css']\n})\nexport class StateTestingComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n      route: ActivatedRoute, \n      private chartServices: GoogleChartService, \n      private covidTrackingServices: CovidTrackingService\n  ) {\n  }\n\n  ngOnInit() {\n      this.checkLoading();\n  }\n\n  private checkLoading() {\n      if(this.chartServices.getLoaded()) {\n          this.gLib = this.chartServices.getGoogle();\n          this.getStateHistorical();\n      } else {\n          // Check again in 3 seconds\n          setTimeout(this.checkLoading, 1000);\n      }\n  }\n\n  public convertDate(oldDate: string) {\n      return oldDate.slice(4,6) + '-' + oldDate.slice(6,8) + '-' + oldDate.slice(0,4);\n  }\n \n  private getSma(data: StateHistorical[], currIndex: number, dayCount: number) {\n    if(currIndex<=dayCount) {\n      return data[currIndex].positive - data[currIndex-1].positive;\n    } else {\n      let sma = 0;\n      for(let index=currIndex-dayCount; index < currIndex; index++)  {\n        sma = sma + (data[index].positive - data[index-1].positive);\n      }\n\n      return sma / dayCount;\n    }\n  }\n\n  private getStateHistorical() {\n    let state='UT';\n    this.covidTrackingServices.getHistoricalByState(state).subscribe((data: StateHistorical[]) => {\n        const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n            return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n        });\n\n        let rawData: any[][] = [['Date', 'Positive', '3 Day SMA', '7 Day SMA']];\n        rawData.push( [this.convertDate(stateData[0].date.toString()), stateData[0].positive, stateData[0].positive, stateData[0].positive]);\n        for(let index=1; index<stateData.length; index++) {\n          let positiveDelta = stateData[index].positive - stateData[index-1].positive;\n          let sma3 = this.getSma(stateData, index, 3);\n          let sma7 = this.getSma(stateData, index, 7);\n          rawData.push( [this.convertDate(stateData[index].date.toString()), positiveDelta, sma3, sma7]);\n        }\n        let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n        let options = {\n            title: 'Daily Positive Tests (' + state + ')',\n            width: 1100,\n            height: 700,\n            seriesType: 'bars',\n            series: {\n              0: {\n                color: 'blue'\n              },\n              1: {\n                type: 'line',\n                color: 'orange'\n              },\n              2: {\n                type: 'line',\n                color: 'red'\n              }\n            }\n        };\n\n        let totalStateTesting = new this.gLib.visualization.ComboChart(document.getElementById('statetesting'));\n\n        totalStateTesting.draw(chartData, options);\n\n    });\n  }\n}\n","<div id='statetesting'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-stateventilator',\n  templateUrl: './stateventilator.component.html',\n  styleUrls: ['./stateventilator.component.css']\n})\nexport class StateVentilatorComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute, \n    private chartServices: GoogleChartService, \n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getStateHistorical();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  private getStateHistorical() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      let rawData: any[][] = [['Date', 'Ventilator']];\n      stateData.forEach((d: StateHistorical) => {\n        rawData.push([this.convertDate(d.date.toString()), d.onVentilatorCurrently]);\n      });\n      let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n      let options = {\n        title: 'Currently On Ventilator (UT)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let ventilatorChart = new this.gLib.visualization.ComboChart(document.getElementById('ventilator'));\n      ventilatorChart.draw(chartData, options);\n    });\n  }\n}\n","<div id=\"ventilator\"></div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface USDailySnapshot {\r\n    positive: number;\r\n    negative: number;\r\n    pending: number;\r\n    hospitalizedCurrently: number;\r\n    hospitalizedCumulative: number;\r\n    inIcuCurrently: number;\r\n    inIcuCumulative: number;\r\n    onVentilatorCurrently: number;\r\n    onVentilatorCumulative: number;\r\n    recovered: number;\r\n    hash: number;\r\n    lastModified: string;\r\n    death: number;\r\n    hospitalized: number;\r\n    total: number;\r\n    totalTestResults: number;\r\n    posNeg: number;\r\n};\r\n\r\nexport interface USHistoricalDaily {\r\n    date: number;\r\n    dateChecked: string;\r\n    death: number;\r\n    deathIncrease: number;\r\n    hash: string;\r\n    hospitalized: number;\r\n    hospitalizedCumulative: number;\r\n    hospitalizedCurrently: number;\r\n    hospitalizedIncrease: number;\r\n    inIcuCumulative: number;\r\n    inIcuCurrently: number;\r\n    negative: number;\r\n    negativeIncrease: number;\r\n    onVentilatorCumulative: number;\r\n    onVentilatorCurrently: number;\r\n    pending: number;\r\n    posNeg: number;\r\n    positive: number;\r\n    positiveIncrease: number;\r\n    recovered: number;\r\n    states: number;\r\n    total: number;\r\n    totalTestResults: number;\r\n    totalTestResultsIncrease: number;\r\n};\r\n\r\n// Check the Covid Tracking Project site for information on these fields\r\n// https://covidtracking.com/api#swaggerWrapper\r\nexport interface StateHistorical {\r\n  date: number;\r\n  state: string;\r\n  positive: number;\r\n  negative: number;\r\n  pending: number;\r\n  hospitalizedCurrently: number;\r\n  hospitalizedCumulative: number;\r\n  inIcuCurrently: number;\r\n  inIcuCumulative: number;\r\n  onVentilatorCurrently: number;\r\n  onVentilatorCumulative: number;\r\n  recovered: number;\r\n  hash: string;\r\n  dateChecked: string;\r\n  death: number;\r\n  hospitalized: number;\r\n  total: number;\r\n  totalTestResults: number;\r\n  posNeg: number;\r\n  fips: string;\r\n  deathIncrease: number;\r\n  hospitalizedIncrease: number;\r\n  negativeIncrease: number;\r\n  positiveIncrease: number;\r\n  totalTestResultsIncrease: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CovidTrackingService {\r\n  private dataHost = 'http://ec2-3-95-10-127.compute-1.amazonaws.com';\r\n  //private dataHost = 'http://localhost';\r\n  private usData = '/api/us/current';\r\n  private usDaily = '/api/us/daily';\r\n  private stateHistorical = '/api/states/historical';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getCountryData(): Observable<USDailySnapshot[]> { \r\n    return this.http.get<USDailySnapshot[]>(this.dataHost + this.usData);\r\n  }\r\n\r\n  public getCountryDaily(): Observable<USHistoricalDaily[]> {\r\n    return this.http.get<USHistoricalDaily[]>(this.dataHost + this.usDaily);\r\n  }\r\n\r\n  public getStateHistorical(): Observable<StateHistorical[]> {\r\n    return this.http.get<StateHistorical[]>(this.dataHost + this.stateHistorical);\r\n  }\r\n\r\n  public getHistoricalByState(state: string): Observable<StateHistorical[]> {\r\n    let params = new HttpParams().set('state', 'ut');\r\n    return this.http.get<StateHistorical[]>(this.dataHost + this.stateHistorical, { params });\r\n  }\r\n}","import { Injectable } from '@angular/core';\n\ndeclare var google: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleChartService {\n  private google: any;\n  private loaded: boolean = false;\n  \n  constructor() { \n    this.google = google;\n    this.google.charts.load('current', {'packages': ['corechart']});\n    this.google.charts.setOnLoadCallback(this.setLoaded());\n  }\n\n  public setLoaded() {\n    this.loaded = true;\n  }\n\n  public getLoaded() {\n    return this.loaded;\n  }\n\n  public getGoogle() {\n    return this.google;\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * Module class for application http interceptor.\n * @implements HttpInterceptor\n * @class AppHttpInterceptorService.\n */\n@Injectable()\nexport class AppHttpInterceptorService implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next\n      .handle(req)\n      .pipe(catchError(err => {\n        if (err instanceof HttpErrorResponse) {\n          this.onError(err);\n        }\n        return throwError(err);\n      }));\n  }\n\n  /**\n   * Handle http errors.\n   * @param response - ErrorResponse.\n   */\n  private onError(response: HttpErrorResponse): void {\n    const clientErrorMessage = this.handleClientSideError(response.status);\n    if (clientErrorMessage) {\n      // show client side error\n      return;\n    }\n\n    const serverErrorMessage = this.handleServerError(response.error);\n    if (serverErrorMessage) {\n      // show server error\n    }\n  }\n\n  private handleClientSideError(status: number): string | undefined {\n    switch (status) {\n      case 0:\n        return 'NO INTERNET CONNECTION';\n      case 404:\n        return 'REQUEST FAILURE';\n      default:\n        return;\n    }\n  }\n\n  private handleServerError(errorResponse: any): string {\n    // handle server error\n    return '';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}