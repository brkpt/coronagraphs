{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/about/about.component.ts","webpack:///src/app/about/about.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/covid/country/countrydailydeaths/countrydailydeaths.component.ts","webpack:///src/app/covid/country/countrydailydeaths/countrydailydeaths.component.html","webpack:///src/app/covid/country/countrytesting/countrytesting.component.ts","webpack:///src/app/covid/country/countrytesting/countrytesting.component.html","webpack:///src/app/covid/country/countrytotaldeaths/countrytotaldeaths.component.ts","webpack:///src/app/covid/country/countrytotaldeaths/countrytotaldeaths.component.html","webpack:///src/app/covid/covidcomponent.ts","webpack:///src/app/covid/state/statedeaths/statetotaldeaths.component.ts","webpack:///src/app/covid/state/statedeaths/statetotaldeaths.component.html","webpack:///src/app/covid/state/statehospitalized/statehospitalized.component.ts","webpack:///src/app/covid/state/statehospitalized/statehospitalized.component.html","webpack:///src/app/covid/state/stateicu/stateicu.component.ts","webpack:///src/app/covid/state/stateicu/stateicu.component.html","webpack:///src/app/covid/state/statepositives/statepositives.component.ts","webpack:///src/app/covid/state/statepositives/statepositives.component.html","webpack:///src/app/covid/state/statetesting/statetesting.component.ts","webpack:///src/app/covid/state/statetesting/statetesting.component.html","webpack:///src/app/covid/state/stateventilator/stateventilator.component.ts","webpack:///src/app/covid/state/stateventilator/stateventilator.component.html","webpack:///src/app/covidtracking/covidtracking.service.ts","webpack:///src/app/google-chart/google-chart.service.ts","webpack:///src/app/http-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AboutComponent","selector","templateUrl","styleUrls","AppComponent","appService","getWelcomeMessage","subscribe","data","title","content","sendData","postRequestResponse","routes","path","component","redirectTo","pathMatch","AppModule","multi","provide","useClass","withOptions","cookieName","headerName","forRoot","enableTracing","declarations","imports","providers","bootstrap","AppService","http","serviceUrl","dataPostTestUrl","get","pipe","response","post","DailyDeaths","date","deaths","day3sma","day7sma","CountryDailyDeathsComponent","route","chartServices","covidTrackingServices","getCountryDaily","sorted","sort","a","b","dailyDeaths","startDate","convertDate","toString","push","death","i","length","dateStr","death3sma","deathIncrease","death7sma","rawData","forEach","datum","bar","options","width","height","seriesType","series","type","color","newData","gLib","visualization","arrayToDataTable","dailyDeathChart","ComboChart","document","getElementById","draw","DailyTesting","tests","positive","sma","DailyPositives","positiveRate","CountryTestingComponent","dailyTesting","dailyPositive","totalTestResults","negative","basePositiveRate","positiveIncrease","totalTestResultsIncrease","positivesma","positiveRate3Sma","isStacked","dailyPositiveChart","TotalDeaths","CountryTotalDeathsComponent","d","totalDeathChart","CovidComponent","checkLoading","getLoaded","getGoogle","loadData","setTimeout","oldDate","slice","currIndex","dayCount","index","StateTotalDeathsComponent","state","getHistoricalByState","stateData","map","sma3","getSma","sma7","chartData","StateHospitalizedComponent","filter","hospitalizedCurrently","currentHospitalizations","StateIcuComponent","hospitalizedIncrease","icuChart","StatePositivesComponent","positives","totalStateTesting","StateTestingComponent","testingDeltas","StateVentilatorComponent","onVentilatorCurrently","ventilatorChart","CovidTrackingService","dataHost","usData","usDaily","stateHistorical","params","set","providedIn","GoogleChartService","loaded","google","charts","load","setOnLoadCallback","setLoaded","AppHttpInterceptorService","next","handle","err","onError","clientErrorMessage","handleClientSideError","status","serverErrorMessage","handleServerError","error","errorResponse","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class='about'>\nThe data for this site is pulled from the <a href='https://covidtracking.com'>Covid Tracking Project</a>\n</div>\n","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string | undefined;\n  postRequestResponse: string | undefined;\n\n  constructor(private appService: AppService) {\n    this.appService.getWelcomeMessage().subscribe((data: any) => {\n      this.title = data.content;\n    });\n  }\n\n  /**\n   * This method is used to test the post request\n   */\n  public postData(): void {\n    this.appService.sendData().subscribe((data: any) => {\n      this.postRequestResponse = data.content;\n    });\n  }\n}\n","<div class='wrapper'>\n  <div class='selectorContainer'>\n      <a class='tablink' routerLink='/about' routerLinkActive='active'>About</a>\n      <a class='tablink' routerLink='/statetesting' routerLinkActive='active'>Utah Testing</a>\n      <a class='tablink' routerLink='/statepositives' routerLinkActive='active'>Utah Positives</a>\n      <a class='tablink' routerLink='/statedeath' routerLinkActive='active'>Utah Daily Deaths</a>\n      <a class='tablink' routerLink='/statehospitalized' routerLinkActive='active'>Utah Hospitalized</a>\n      <a class='tablink' routerLink='/countrydeath' routerLinkActive='active'>Country Deaths</a>\n      <a class='tablink' routerLink='/countrydaily' routerLinkActive='active'>Country Daily</a>\n      <a class='tablink' routerLink='/countrytesting' routerLinkActive='active'>Country Testing</a>\n  </div>\n  <div class='displayContainer'>\n    <div class='headerContainer'>\n      <div class='headerText'>CoronaGraphs</div>\n    </div>\n    <div class='graphContainer'><router-outlet></router-outlet></div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HTTP_INTERCEPTORS, HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { AppHttpInterceptorService } from './http-interceptor.service';\nimport { CountryDailyDeathsComponent} from './covid/country/countrydailydeaths/countrydailydeaths.component';\nimport { CountryTotalDeathsComponent} from './covid/country/countrytotaldeaths/countrytotaldeaths.component';\nimport { CountryTestingComponent} from './covid/country/countrytesting/countrytesting.component';\nimport { StateTotalDeathsComponent} from './covid/state/statedeaths/statetotaldeaths.component';\nimport { StateHospitalizedComponent} from './covid/state/statehospitalized/statehospitalized.component';\nimport { StateIcuComponent } from './covid/state/stateicu/stateicu.component';\nimport { StateVentilatorComponent } from './covid/state/stateventilator/stateventilator.component';\nimport { StatePositivesComponent } from './covid/state/statepositives/statepositives.component'\nimport { StateTestingComponent } from './covid/state/statetesting/statetesting.component';\nimport { AboutComponent } from './about/about.component'\n\nconst routes: Routes = [\n  {\n    path: 'about',\n    component: AboutComponent\n  },\n  {\n    path: 'countrydeath',\n    component: CountryTotalDeathsComponent\n  },\n  {\n    path: 'countrydaily',\n    component: CountryDailyDeathsComponent\n  },\n  {\n    path: 'countrytesting',\n    component: CountryTestingComponent\n  },\n  {\n    path: 'statedeath',\n    component: StateTotalDeathsComponent\n  },\n  {\n    path: 'statepositives',\n    component: StatePositivesComponent\n  },\n  {\n    path: 'statetesting',\n    component: StateTestingComponent\n  },\n  {\n    path: 'statehospitalized',\n    component: StateHospitalizedComponent\n  },\n  {\n    path: '',\n    redirectTo: '/about',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountryDailyDeathsComponent,\n    CountryTotalDeathsComponent,\n    CountryTestingComponent,\n    StateTotalDeathsComponent,\n    StatePositivesComponent,\n    StateHospitalizedComponent,\n    StateIcuComponent,\n    StateVentilatorComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'Csrf-Token',\n      headerName: 'Csrf-Token',\n    }),\n    RouterModule.forRoot(\n      routes,\n      {enableTracing: true}\n    ),\n  ],\n  providers: [\n    AppService,\n    {\n      multi: true,\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppHttpInterceptorService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/index';\n\n/**\n * Class representing application service.\n *\n * @class AppService.\n */\n@Injectable() \nexport class AppService {\n  private serviceUrl = '/api/summary';\n  private dataPostTestUrl = '/api/postTest';\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * Makes a http get request to retrieve the welcome message from the backend service.\n   */\n  public getWelcomeMessage() {\n    return this.http.get(this.serviceUrl).pipe(\n      map(response => response)\n    );\n  }\n\n  /**\n   * Makes a http post request to send some data to backend & get response.\n   */\n  public sendData(): Observable<any> {\n    return this.http.post(this.dataPostTestUrl, {});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from '../../../covidtracking/covidtracking.service';\n\nclass DailyDeaths {\n  public date: string = '';\n  public deaths: number = 0;\n  public day3sma: number = 0;\n  public day7sma: number = 0;\n  constructor(date: string, deaths: number, day3sma: number, day7sma: number) {\n    this.date = date;\n    this.deaths = deaths;\n    this.day3sma = day3sma;\n    this.day7sma = day7sma;\n  }\n};\n\n@Component({\n  selector: 'app-countrydailydeaths',\n  templateUrl: './countrydailydeaths.component.html',\n  styleUrls: ['./countrydailydeaths.component.css']\n})\nexport class CountryDailyDeathsComponent extends CovidComponent {\n  constructor(\n    route: ActivatedRoute,\n    protected chartServices: GoogleChartService,\n    protected covidTrackingServices: CovidTrackingService\n  ) { \n    super(chartServices, covidTrackingServices);\n  }\n\n  protected loadData() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let dailyDeaths: DailyDeaths[] = [];\n      let startDate = this.convertDate(sorted[0].date.toString());\n      dailyDeaths.push(new DailyDeaths(startDate, sorted[0].death, sorted[0].death, sorted[0].death));\n      for (let i = 1; i < sorted.length; i++) {\n        let dateStr = this.convertDate(sorted[i].date.toString());\n        if (i > 2) {\n          let death3sma = (\n            sorted[i - 3].deathIncrease +\n            sorted[i - 2].deathIncrease +\n            sorted[i - 1].deathIncrease) / 3;\n          if (i > 7) {\n            let death7sma = (\n              sorted[i - 7].deathIncrease +\n              sorted[i - 6].deathIncrease +\n              sorted[i - 5].deathIncrease +\n              sorted[i - 4].deathIncrease +\n              sorted[i - 3].deathIncrease +\n              sorted[i - 2].deathIncrease +\n              sorted[i - 1].deathIncrease) / 7;\n            dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, death3sma, death7sma));\n          } else {\n            dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, death3sma, death3sma));\n          }\n\n        } else {\n          dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, sorted[i].deathIncrease, sorted[i].deathIncrease));\n        }\n      }\n\n      let rawData: any[][] = [['Date', 'Deaths', '3-day SMA', '7-day SMA']];\n      dailyDeaths.forEach((datum: DailyDeaths) => {\n        let bar = [datum.date, datum.deaths, datum.day3sma, datum.day7sma];\n        rawData.push(bar);\n      });\n\n      let options = {\n        title: 'Daily Deaths (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n        series: {\n          1: {\n            type: 'line',\n            color: 'green'\n          },\n          2: {\n            type: 'line',\n            color: 'orange'\n          }\n        }\n      }\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let dailyDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('dailyDeaths'));\n\n      dailyDeathChart.draw(newData, options);\n    })\n  }\n\n  public refreshDailyDeathChart() {\n  }\n}\n","<div id='dailyDeaths'></div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from 'src/app/covidtracking/covidtracking.service';\n\nclass DailyTesting {\n  public date: string = '';\n  public tests: number = 0;\n  public positive: number = 0;\n  public sma: number = 0;\n  constructor(date: string, tests: number, positive: number, sma: number) {\n    this.date = date;\n    this.tests = tests;\n    this.positive = positive;\n    this.sma = sma;\n  }\n};\n\nclass DailyPositives {\n  public date: string = '';\n  public positiveRate: number = 0;\n  public sma: number = 0;\n  constructor(date: string, positiveRate: number, sma: number) {\n    this.date = date;\n    this.positiveRate = positiveRate;\n    this.sma = sma;\n  }\n};\n\n@Component({\n  selector: 'app-countrytesting',\n  templateUrl: './countrytesting.component.html',\n  styleUrls: ['./countrytesting.component.css']\n})\nexport class CountryTestingComponent extends CovidComponent {\n  constructor(\n    route: ActivatedRoute,\n    protected chartServices: GoogleChartService,\n    protected covidTrackingServices: CovidTrackingService\n  ) { \n    super(chartServices, covidTrackingServices);\n  }\n\n  public loadData() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      // Collect the data\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let dailyTesting: DailyTesting[] = [];\n      let dailyPositive: DailyPositives[] = [];\n      let startDate = this.convertDate(sorted[0].date.toString());\n      dailyTesting.push(new DailyTesting(startDate, sorted[0].totalTestResults, sorted[0].positive, sorted[0].negative));\n      let basePositiveRate = sorted[0].positiveIncrease / sorted[0].totalTestResultsIncrease;\n      dailyPositive.push(new DailyPositives(startDate, basePositiveRate, basePositiveRate));\n      for (let i = 1; i < sorted.length; i++) {\n        let dateStr = this.convertDate(sorted[i].date.toString());\n        let positiveRate = sorted[i].positiveIncrease / sorted[i].totalTestResultsIncrease;\n        if (i > 2) {\n          let positivesma = (\n            sorted[i - 3].positiveIncrease +\n            sorted[i - 2].positiveIncrease +\n            sorted[i - 1].positiveIncrease) / 3;\n          dailyTesting.push(new DailyTesting(dateStr, sorted[i].totalTestResultsIncrease, sorted[i].positiveIncrease, positivesma));\n\n          let positiveRate3Sma = (\n            sorted[i - 3].positiveIncrease / sorted[i - 3].totalTestResultsIncrease +\n            sorted[i - 2].positiveIncrease / sorted[i - 2].totalTestResultsIncrease +\n            sorted[i - 1].positiveIncrease / sorted[i - 1].totalTestResultsIncrease\n          ) / 3;\n          dailyPositive.push(new DailyPositives(dateStr, sorted[i].positiveIncrease / sorted[i].totalTestResultsIncrease, positiveRate3Sma));\n\n        } else {\n          dailyTesting.push(new DailyTesting(dateStr, sorted[i].positiveIncrease, sorted[i].positiveIncrease, sorted[i].positiveIncrease));\n          dailyPositive.push(new DailyPositives(dateStr, positiveRate, positiveRate));\n        }\n      }\n\n      let rawData: any[][] = [['Date', 'Positive', 'Tests', 'SMA']];\n      dailyTesting.forEach((datum: DailyTesting) => {\n        let data = [datum.date, datum.positive, datum.tests, datum.sma];\n        rawData.push(data);\n      });\n\n      let options = {\n        title: 'Daily Positive (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n        isStacked: true,\n        series: {\n          0: {\n            color: 'blue'\n          },\n          1: {\n            color: 'green'\n          },\n          2: {\n            type: 'line',\n            color: 'orange'\n          }\n        }\n      }\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let dailyPositiveChart = new this.gLib.visualization.ComboChart(document.getElementById('dailyTesting'));\n\n      dailyPositiveChart.draw(newData, options);\n    })\n  }\n\n}\n","<div id='dailyTesting'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from 'src/app/covidtracking/covidtracking.service';\n\nclass TotalDeaths {\n  public date: string = '';\n  public deaths: number = 0;\n  constructor(date: string, deaths: number) {\n    this.date = date;\n    this.deaths = deaths;\n  }\n};\n\n@Component({\n  selector: 'app-countrytotaldeaths',\n  templateUrl: './countrytotaldeaths.component.html',\n  styleUrls: ['./countrytotaldeaths.component.css']\n})\nexport class CountryTotalDeathsComponent extends CovidComponent {\n  constructor(\n    route: ActivatedRoute,\n    protected chartServices: GoogleChartService,\n    protected covidTrackingServices: CovidTrackingService\n  ) { \n    super(chartServices, covidTrackingServices);\n  }\n\n  public loadData() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      // Collect the data\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let rawData: any[][] = [['Date', 'Deaths']];\n      sorted.forEach( (d: USHistoricalDaily) => {\n        rawData.push( [this.convertDate(d.date.toString()), d.death]);\n\n      })\n\n      // Collect daily testing\n      let options = {\n        title: 'Total Deaths (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('totalDeaths'));\n\n      totalDeathChart.draw(newData, options);\n      })\n    }\n\n}\n","<div id='totalDeaths'></div>\n","import { OnInit } from '@angular/core';\r\nimport { GoogleChartService } from '../google-chart/google-chart.service';\r\nimport {\r\n  CovidTrackingService,\r\n  USHistoricalDaily,\r\n  StateHistorical\r\n} from '../covidtracking/covidtracking.service';\r\n\r\nexport abstract class CovidComponent implements OnInit {\r\n  protected gLib: any;\r\n\r\n  constructor (\r\n    protected chartServices: GoogleChartService,\r\n    protected covidTrackingServices: CovidTrackingService\r\n  ) {}\r\n\r\n  protected abstract loadData();\r\n\r\n  ngOnInit() {\r\n    this.checkLoading();\r\n  }\r\n\r\n  private checkLoading() {\r\n    if (this.chartServices.getLoaded()) {\r\n      this.gLib = this.chartServices.getGoogle();\r\n      this.loadData();\r\n    } else {\r\n      // Check again in 3 seconds\r\n      setTimeout(this.checkLoading, 1000);\r\n    }\r\n  }\r\n\r\n  public convertDate(oldDate: string) {\r\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\r\n  }\r\n\r\n  protected getSma(data: number[], currIndex: number, dayCount: number) {\r\n    if(currIndex<=dayCount) {\r\n      return data[currIndex];\r\n    } else {\r\n      let sma = 0;\r\n      for(let index=currIndex-dayCount+1; index < currIndex+1; index++)  {\r\n        sma = sma + data[index];\r\n      }\r\n\r\n      return sma / dayCount;\r\n\r\n    }\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statedeaths',\n  templateUrl: './statetotaldeaths.component.html',\n  styleUrls: ['./statetotaldeaths.component.css']\n})\nexport class StateTotalDeathsComponent extends CovidComponent {\n  constructor(\n      route: ActivatedRoute, \n      protected chartServices: GoogleChartService, \n      protected covidTrackingServices: CovidTrackingService\n  ) {\n    super(chartServices, covidTrackingServices);\n  }\n  \n  protected loadData() {\n    let state='UT';\n    this.covidTrackingServices.getHistoricalByState(state).subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n          return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      let rawData: any[][] = [['Date','Deaths', '3-Day SMA', '7-Day SMA']];\n      let dailyDeaths = stateData.map( (d: StateHistorical) => d.deathIncrease);\n      for(let index=1; index<stateData.length; index++) {\n        let sma3 = this.getSma(dailyDeaths, index, 3);\n        let sma7 = this.getSma(dailyDeaths, index, 7);\n        rawData.push( [this.convertDate(stateData[index].date.toString()), dailyDeaths[index], sma3, sma7]);\n      }\n      let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n      let options = {\n          title: 'Daily Deaths (' + state + ')',\n          width: 1100,\n          height: 700,\n          seriesType: 'bars',\n          series: {\n            0: {\n              color: 'blue'\n            },\n            1: {\n              type: 'line',\n              color: 'orange'\n            },\n            2: {\n              type: 'line',\n              color: 'red'\n            }\n          }\n      };\n\n      let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('stateDeaths'));\n      totalDeathChart.draw(chartData, options);\n    });\n  }\n}\n","<div id='stateDeaths'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statehospitalized',\n  templateUrl: './statehospitalized.component.html',\n  styleUrls: ['./statehospitalized.component.css']\n})\nexport class StateHospitalizedComponent extends CovidComponent {\n  constructor(\n    route: ActivatedRoute, \n    protected chartServices: GoogleChartService, \n    protected covidTrackingServices: CovidTrackingService\n  ) { \n    super(chartServices, covidTrackingServices);\n  }\n\n  protected loadData() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n          return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      }).filter( (d: StateHistorical) => {\n        if(d.hospitalizedCurrently !== null) {\n          return true;\n        } else {\n          return false;\n        }\n      })\n\n      let rawData: any[][] = [['Date', 'Hospitalizations', '3-Day SMA', '7-Day SMA']];\n      let currentHospitalizations = stateData.map( (d: StateHistorical) => {\n        if(!!d.hospitalizedCurrently) {\n          return d.hospitalizedCurrently;\n        } else {\n          return 0;\n        }\n      });\n\n      rawData.push(\n        [\n          this.convertDate(stateData[0].date.toString()), \n          currentHospitalizations[0],\n          currentHospitalizations[0],\n          currentHospitalizations[0],\n        ]\n      );\n      for(let index=0; index<stateData.length; index++) {\n        let sma3 = this.getSma(currentHospitalizations, index, 3);\n        let sma7 = this.getSma(currentHospitalizations, index, 7);\n        rawData.push(\n          [\n            this.convertDate(stateData[index].date.toString()), \n            currentHospitalizations[index],\n            sma3, \n            sma7\n          ]\n        );\n      }\n      let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n      let options = {\n        title: 'Currently In Hospital (UT)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n        series: {\n          0: {\n            color: 'blue'\n          },\n          1: {\n            type: 'line',\n            color: 'orange'\n          },\n          2: {\n            type: 'line',\n            color: 'red'\n          }\n        }\n      };\n\n      let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('statehospitalizations'));\n      totalDeathChart.draw(chartData, options);\n    });\n  }\n\n}\n","<div id=\"statehospitalizations\"></div>","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-stateicu',\n  templateUrl: './stateicu.component.html',\n  styleUrls: ['./stateicu.component.css']\n})\nexport class StateIcuComponent extends CovidComponent {\n  constructor(\n    route: ActivatedRoute, \n    protected chartServices: GoogleChartService, \n    protected covidTrackingServices: CovidTrackingService\n  ) { \n    super(chartServices, covidTrackingServices);\n  }\n\n  protected loadData() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n    let rawData: any[][] = [['Date', 'ICU']];\n    stateData.forEach((d: StateHistorical) => {\n      rawData.push([this.convertDate(d.date.toString()), d.hospitalizedIncrease]);\n    });\n    let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n    let options = {\n      title: 'Currently in ICU (UT)',\n      width: 1100,\n      height: 700,\n      seriesType: 'bars',\n    };\n\n    let icuChart = new this.gLib.visualization.ComboChart(document.getElementById('icu'));\n\n    icuChart.draw(chartData, options);\n\n    });\n  }\n}\n","<div id=\"icu\"></div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statetesting',\n  templateUrl: './statepositives.component.html',\n  styleUrls: ['./statepositives.component.css']\n})\nexport class StatePositivesComponent extends CovidComponent {\n  constructor(\n      route: ActivatedRoute, \n      protected chartServices: GoogleChartService, \n      protected covidTrackingServices: CovidTrackingService\n  ) {\n    super(chartServices, covidTrackingServices);\n  }\n\n  protected loadData() {\n    let state='UT';\n    this.covidTrackingServices.getHistoricalByState(state).subscribe((data: StateHistorical[]) => {\n        const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n            return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n        });\n\n        let rawData: any[][] = [['Date', 'Positive', '3 Day SMA', '7 Day SMA']];\n        let positives = stateData.map( (d: StateHistorical) => { return d.positiveIncrease; });\n        rawData.push( [this.convertDate(stateData[0].date.toString()), stateData[0].positive, stateData[0].positive, stateData[0].positive]);\n        for(let index=1; index<stateData.length; index++) {\n          let sma3 = this.getSma(positives, index, 3);\n          let sma7 = this.getSma(positives, index, 7);\n          rawData.push( [this.convertDate(stateData[index].date.toString()), positives[index], sma3, sma7]);\n        }\n        let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n        let options = {\n            title: 'Daily Positive Tests (' + state + ')',\n            width: 1100,\n            height: 700,\n            seriesType: 'bars',\n            series: {\n              0: {\n                color: 'blue'\n              },\n              1: {\n                type: 'line',\n                color: 'orange'\n              },\n              2: {\n                type: 'line',\n                color: 'red'\n              }\n            }\n        };\n\n        let totalStateTesting = new this.gLib.visualization.ComboChart(document.getElementById('statepositives'));\n\n        totalStateTesting.draw(chartData, options);\n\n    });\n  }\n}\n","<div id='statepositives'></div>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n\n@Component({\n  selector: 'app-statetesting',\n  templateUrl: './statetesting.component.html',\n  styleUrls: ['./statetesting.component.css']\n})\nexport class StateTestingComponent extends CovidComponent {\n  constructor(\n      route: ActivatedRoute, \n      protected chartServices: GoogleChartService, \n      protected covidTrackingServices: CovidTrackingService\n  ) {\n    super(chartServices, covidTrackingServices);\n  }\n\n  protected loadData() {\n    let state='UT';\n    this.covidTrackingServices.getHistoricalByState(state).subscribe((data: StateHistorical[]) => {\n        const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n            return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n        });\n\n        let testingDeltas: number[] = [];\n        for(let index=0;index<stateData.length; index++) {\n            testingDeltas.push(stateData[index].totalTestResultsIncrease);\n        }\n        let rawData: any[][] = [['Date', 'Positive', '3 Day SMA', '7 Day SMA']];\n        rawData.push( [this.convertDate(stateData[0].date.toString()), stateData[0].totalTestResultsIncrease, stateData[0].totalTestResultsIncrease, stateData[0].totalTestResultsIncrease]);\n        for(let index=1; index<stateData.length; index++) {\n          let sma3 = this.getSma(testingDeltas, index, 3);\n          let sma7 = this.getSma(testingDeltas, index, 7);\n          rawData.push( [this.convertDate(stateData[index].date.toString()), stateData[index].totalTestResultsIncrease, sma3, sma7]);\n        }\n        let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n        let options = {\n            title: 'Daily Total Tests (' + state + ')',\n            width: 1100,\n            height: 700,\n            seriesType: 'bars',\n            series: {\n              0: {\n                color: 'blue'\n              },\n              1: {\n                type: 'line',\n                color: 'orange'\n              },\n              2: {\n                type: 'line',\n                color: 'red'\n              }\n            }\n        };\n\n        let totalStateTesting = new this.gLib.visualization.ComboChart(document.getElementById('statetesting'));\n\n        totalStateTesting.draw(chartData, options);\n\n    });\n  }\n}\n","<div id=\"statetesting\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { CovidComponent } from '../../covidcomponent';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-stateventilator',\n  templateUrl: './stateventilator.component.html',\n  styleUrls: ['./stateventilator.component.css']\n})\nexport class StateVentilatorComponent extends CovidComponent {\n  constructor(\n    route: ActivatedRoute, \n    protected chartServices: GoogleChartService, \n    protected covidTrackingServices: CovidTrackingService\n  ) { \n    super(chartServices, covidTrackingServices);\n  }\n\n  protected loadData() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      let rawData: any[][] = [['Date', 'Ventilator']];\n      stateData.forEach((d: StateHistorical) => {\n        rawData.push([this.convertDate(d.date.toString()), d.onVentilatorCurrently]);\n      });\n      let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n      let options = {\n        title: 'Currently On Ventilator (UT)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let ventilatorChart = new this.gLib.visualization.ComboChart(document.getElementById('ventilator'));\n      ventilatorChart.draw(chartData, options);\n    });\n  }\n}\n","<div id=\"ventilator\"></div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface USDailySnapshot {\r\n    positive: number;\r\n    negative: number;\r\n    pending: number;\r\n    hospitalizedCurrently: number;\r\n    hospitalizedCumulative: number;\r\n    inIcuCurrently: number;\r\n    inIcuCumulative: number;\r\n    onVentilatorCurrently: number;\r\n    onVentilatorCumulative: number;\r\n    recovered: number;\r\n    hash: number;\r\n    lastModified: string;\r\n    death: number;\r\n    hospitalized: number;\r\n    total: number;\r\n    totalTestResults: number;\r\n    posNeg: number;\r\n};\r\n\r\nexport interface USHistoricalDaily {\r\n    date: number;\r\n    dateChecked: string;\r\n    death: number;\r\n    deathIncrease: number;\r\n    hash: string;\r\n    hospitalized: number;\r\n    hospitalizedCumulative: number;\r\n    hospitalizedCurrently: number;\r\n    hospitalizedIncrease: number;\r\n    inIcuCumulative: number;\r\n    inIcuCurrently: number;\r\n    negative: number;\r\n    negativeIncrease: number;\r\n    onVentilatorCumulative: number;\r\n    onVentilatorCurrently: number;\r\n    pending: number;\r\n    posNeg: number;\r\n    positive: number;\r\n    positiveIncrease: number;\r\n    recovered: number;\r\n    states: number;\r\n    total: number;\r\n    totalTestResults: number;\r\n    totalTestResultsIncrease: number;\r\n};\r\n\r\n// Check the Covid Tracking Project site for information on these fields\r\n// https://covidtracking.com/api#swaggerWrapper\r\nexport interface StateHistorical {\r\n  date: number;\r\n  state: string;\r\n  positive: number;\r\n  negative: number;\r\n  pending: number;\r\n  hospitalizedCurrently: number;\r\n  hospitalizedCumulative: number;\r\n  inIcuCurrently: number;\r\n  inIcuCumulative: number;\r\n  onVentilatorCurrently: number;\r\n  onVentilatorCumulative: number;\r\n  recovered: number;\r\n  hash: string;\r\n  dateChecked: string;\r\n  death: number;\r\n  hospitalized: number;\r\n  total: number;\r\n  totalTestResults: number;\r\n  posNeg: number;\r\n  fips: string;\r\n  deathIncrease: number;\r\n  hospitalizedIncrease: number;\r\n  negativeIncrease: number;\r\n  positiveIncrease: number;\r\n  totalTestResultsIncrease: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CovidTrackingService {\r\n  private dataHost = 'https://www.coronagraphs.online';\r\n  //private dataHost = 'https://localhost';\r\n  private usData = '/api/us/current';\r\n  private usDaily = '/api/us/daily';\r\n  private stateHistorical = '/api/states/historical';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getCountryData(): Observable<USDailySnapshot[]> { \r\n    return this.http.get<USDailySnapshot[]>(this.dataHost + this.usData);\r\n  }\r\n\r\n  public getCountryDaily(): Observable<USHistoricalDaily[]> {\r\n    return this.http.get<USHistoricalDaily[]>(this.dataHost + this.usDaily);\r\n  }\r\n\r\n  public getStateHistorical(): Observable<StateHistorical[]> {\r\n    return this.http.get<StateHistorical[]>(this.dataHost + this.stateHistorical);\r\n  }\r\n\r\n  public getHistoricalByState(state: string): Observable<StateHistorical[]> {\r\n    let params = new HttpParams().set('state', 'ut');\r\n    return this.http.get<StateHistorical[]>(this.dataHost + this.stateHistorical, { params });\r\n  }\r\n}","import { Injectable } from '@angular/core';\n\ndeclare var google: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleChartService {\n  private google: any;\n  private loaded: boolean = false;\n  \n  constructor() { \n    this.google = google;\n    this.google.charts.load('current', {'packages': ['corechart']});\n    this.google.charts.setOnLoadCallback(this.setLoaded());\n  }\n\n  public setLoaded() {\n    this.loaded = true;\n  }\n\n  public getLoaded() {\n    return this.loaded;\n  }\n\n  public getGoogle() {\n    return this.google;\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * Module class for application http interceptor.\n * @implements HttpInterceptor\n * @class AppHttpInterceptorService.\n */\n@Injectable()\nexport class AppHttpInterceptorService implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next\n      .handle(req)\n      .pipe(catchError(err => {\n        if (err instanceof HttpErrorResponse) {\n          this.onError(err);\n        }\n        return throwError(err);\n      }));\n  }\n\n  /**\n   * Handle http errors.\n   * @param response - ErrorResponse.\n   */\n  private onError(response: HttpErrorResponse): void {\n    const clientErrorMessage = this.handleClientSideError(response.status);\n    if (clientErrorMessage) {\n      // show client side error\n      return;\n    }\n\n    const serverErrorMessage = this.handleServerError(response.error);\n    if (serverErrorMessage) {\n      // show server error\n    }\n  }\n\n  private handleClientSideError(status: number): string | undefined {\n    switch (status) {\n      case 0:\n        return 'NO INTERNET CONNECTION';\n      case 404:\n        return 'REQUEST FAILURE';\n      default:\n        return;\n    }\n  }\n\n  private handleServerError(errorResponse: any): string {\n    // handle server error\n    return '';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}