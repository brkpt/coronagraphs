{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/covid/country/countrydailydeaths/countrydailydeaths.component.ts","webpack:///src/app/covid/country/countrydailydeaths/countrydailydeaths.component.html","webpack:///src/app/covid/country/countrytesting/countrytesting.component.ts","webpack:///src/app/covid/country/countrytesting/countrytesting.component.html","webpack:///src/app/covid/country/countrytotaldeaths/countrytotaldeaths.component.ts","webpack:///src/app/covid/country/countrytotaldeaths/countrytotaldeaths.component.html","webpack:///src/app/covid/state/statedeaths/statetotaldeaths.component.ts","webpack:///src/app/covid/state/statedeaths/statetotaldeaths.component.html","webpack:///src/app/covid/state/statehospitalized/statehospitalized.component.ts","webpack:///src/app/covid/state/statehospitalized/statehospitalized.component.html","webpack:///src/app/covid/state/stateicu/stateicu.component.ts","webpack:///src/app/covid/state/stateicu/stateicu.component.html","webpack:///src/app/covid/state/statetesting/statetesting.component.ts","webpack:///src/app/covid/state/statetesting/statetesting.component.html","webpack:///src/app/covid/state/stateventilator/stateventilator.component.ts","webpack:///src/app/covid/state/stateventilator/stateventilator.component.html","webpack:///src/app/covidtracking/covidtracking.service.ts","webpack:///src/app/google-chart/google-chart.service.ts","webpack:///src/app/http-interceptor.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","appService","getWelcomeMessage","subscribe","data","title","content","sendData","postRequestResponse","selector","templateUrl","styleUrls","routes","path","component","redirectTo","pathMatch","AppModule","multi","provide","useClass","withOptions","cookieName","headerName","forRoot","enableTracing","declarations","imports","providers","bootstrap","AppService","http","serviceUrl","dataPostTestUrl","get","pipe","response","post","DailyDeaths","date","deaths","day3sma","day7sma","CountryDailyDeathsComponent","route","chartServices","covidTrackingServices","checkLoading","getLoaded","gLib","getGoogle","getCountryDaily","setTimeout","oldDate","slice","sorted","sort","a","b","dailyDeaths","startDate","convertDate","toString","push","death","i","length","dateStr","death3sma","deathIncrease","death7sma","rawData","forEach","datum","bar","options","width","height","seriesType","series","type","color","newData","visualization","arrayToDataTable","dailyDeathChart","ComboChart","document","getElementById","draw","DailyTesting","tests","positive","sma","DailyPositives","positiveRate","CountryTestingComponent","dailyTesting","dailyPositive","totalTestResults","negative","basePositiveRate","positiveIncrease","totalTestResultsIncrease","positivesma","positiveRate3Sma","isStacked","dailyPositiveChart","TotalDeaths","CountryTotalDeathsComponent","d","totalDeathChart","StateTotalDeathsComponent","getStateHistorical","state","getHistoricalByState","stateData","chartData","StateHospitalizedComponent","hospitalizedIncrease","StateIcuComponent","icuChart","StateTestingComponent","index","testingDelta","positiveDelta","totalStateTesting","StateVentilatorComponent","onVentilatorCurrently","ventilatorChart","CovidTrackingService","dataHost","usData","usDaily","stateHistorical","params","set","providedIn","GoogleChartService","loaded","google","charts","load","setOnLoadCallback","setLoaded","AppHttpInterceptorService","next","handle","err","onError","clientErrorMessage","handleClientSideError","status","serverErrorMessage","handleServerError","error","errorResponse","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { AppService } from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title: string | undefined;\n  postRequestResponse: string | undefined;\n\n  constructor(private appService: AppService) {\n    this.appService.getWelcomeMessage().subscribe((data: any) => {\n      this.title = data.content;\n    });\n  }\n\n  /**\n   * This method is used to test the post request\n   */\n  public postData(): void {\n    this.appService.sendData().subscribe((data: any) => {\n      this.postRequestResponse = data.content;\n    });\n  }\n}\n","<div class='wrapper'>\n  <div class='selectorContainer'>\n      <a class='tablink' routerLink='/countrydeath' routerLinkActive='active'>Country Deaths</a>\n      <a class='tablink' routerLink='/countrydaily' routerLinkActive='active'>Country Daily</a>\n      <a class='tablink' routerLink='/countrytesting' routerLinkActive='active'>Country Testing</a>\n      <a class='tablink' routerLink='/statedeath' routerLinkActive='active'>Utah Daily Deaths</a>\n      <a class='tablink' routerLink='/statetesting' routerLinkActive='active'>Utah Testing</a>\n  </div>\n  <div class='displayContainer'>\n    <div class='headerContainer'>\n      <div class='headerText'>CoronaGraphs</div>\n    </div>\n    <div class='graphContainer'><router-outlet></router-outlet></div>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HTTP_INTERCEPTORS, HttpClientModule, HttpClientXsrfModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppService } from './app.service';\nimport { AppHttpInterceptorService } from './http-interceptor.service';\nimport { CountryDailyDeathsComponent} from './covid/country/countrydailydeaths/countrydailydeaths.component';\nimport { CountryTotalDeathsComponent} from './covid/country/countrytotaldeaths/countrytotaldeaths.component';\nimport { CountryTestingComponent} from './covid/country/countrytesting/countrytesting.component';\nimport { StateTotalDeathsComponent} from './covid/state/statedeaths/statetotaldeaths.component';\nimport { StateHospitalizedComponent} from './covid/state/statehospitalized/statehospitalized.component';\nimport { StateIcuComponent } from './covid/state/stateicu/stateicu.component';\nimport { StateVentilatorComponent } from './covid/state/stateventilator/stateventilator.component';\nimport { StateTestingComponent } from './covid/state/statetesting/statetesting.component'\n\nconst routes: Routes = [\n  {\n    path: 'countrydeath',\n    component: CountryTotalDeathsComponent\n  },\n  {\n    path: 'countrydaily',\n    component: CountryDailyDeathsComponent\n  },\n  {\n    path: 'countrytesting',\n    component: CountryTestingComponent\n  },\n  {\n    path: 'statedeath',\n    component: StateTotalDeathsComponent\n  },\n  {\n    path: 'statetesting',\n    component: StateTestingComponent\n  },\n  {\n    path: 'statehospitalized',\n    component: StateHospitalizedComponent\n  },\n  {\n    path: '',\n    redirectTo: '/countrydeath',\n    pathMatch: 'full'\n  },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CountryDailyDeathsComponent,\n    CountryTotalDeathsComponent,\n    CountryTestingComponent,\n    StateTotalDeathsComponent,\n    StateTestingComponent,\n    StateHospitalizedComponent,\n    StateIcuComponent,\n    StateVentilatorComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientXsrfModule.withOptions({\n      cookieName: 'Csrf-Token',\n      headerName: 'Csrf-Token',\n    }),\n    RouterModule.forRoot(\n      routes,\n      {enableTracing: true}\n    ),\n  ],\n  providers: [\n    AppService,\n    {\n      multi: true,\n      provide: HTTP_INTERCEPTORS,\n      useClass: AppHttpInterceptorService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs/index';\n\n/**\n * Class representing application service.\n *\n * @class AppService.\n */\n@Injectable() \nexport class AppService {\n  private serviceUrl = '/api/summary';\n  private dataPostTestUrl = '/api/postTest';\n\n  constructor(private http: HttpClient) {\n  }\n\n  /**\n   * Makes a http get request to retrieve the welcome message from the backend service.\n   */\n  public getWelcomeMessage() {\n    return this.http.get(this.serviceUrl).pipe(\n      map(response => response)\n    );\n  }\n\n  /**\n   * Makes a http post request to send some data to backend & get response.\n   */\n  public sendData(): Observable<any> {\n    return this.http.post(this.dataPostTestUrl, {});\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from '../../../covidtracking/covidtracking.service';\n\nclass DailyDeaths {\n  public date: string = '';\n  public deaths: number = 0;\n  public day3sma: number = 0;\n  public day7sma: number = 0;\n  constructor(date: string, deaths: number, day3sma: number, day7sma: number) {\n    this.date = date;\n    this.deaths = deaths;\n    this.day3sma = day3sma;\n    this.day7sma = day7sma;\n  }\n};\n\n@Component({\n  selector: 'app-countrydailydeaths',\n  templateUrl: './countrydailydeaths.component.html',\n  styleUrls: ['./countrydailydeaths.component.css']\n})\nexport class CountryDailyDeathsComponent implements OnInit {\n  private gLib: any;\n\n  constructor(\n    route: ActivatedRoute,\n    private chartServices: GoogleChartService,\n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getCountryDaily();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  public getCountryDaily() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let dailyDeaths: DailyDeaths[] = [];\n      let startDate = this.convertDate(sorted[0].date.toString());\n      dailyDeaths.push(new DailyDeaths(startDate, sorted[0].death, sorted[0].death, sorted[0].death));\n      for (let i = 1; i < sorted.length; i++) {\n        let dateStr = this.convertDate(sorted[i].date.toString());\n        if (i > 2) {\n          let death3sma = (\n            sorted[i - 3].deathIncrease +\n            sorted[i - 2].deathIncrease +\n            sorted[i - 1].deathIncrease) / 3;\n          if (i > 7) {\n            let death7sma = (\n              sorted[i - 7].deathIncrease +\n              sorted[i - 6].deathIncrease +\n              sorted[i - 5].deathIncrease +\n              sorted[i - 4].deathIncrease +\n              sorted[i - 3].deathIncrease +\n              sorted[i - 2].deathIncrease +\n              sorted[i - 1].deathIncrease) / 7;\n            dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, death3sma, death7sma));\n          } else {\n            dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, death3sma, death3sma));\n          }\n\n        } else {\n          dailyDeaths.push(new DailyDeaths(dateStr, sorted[i].deathIncrease, sorted[i].deathIncrease, sorted[i].deathIncrease));\n        }\n      }\n\n      let rawData: any[][] = [['Date', 'Deaths', '3SMA', '7SMA']];\n      dailyDeaths.forEach((datum: DailyDeaths) => {\n        let bar = [datum.date, datum.deaths, datum.day3sma, datum.day7sma];\n        rawData.push(bar);\n      });\n\n      let options = {\n        title: 'Daily Deaths (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n        series: {\n          1: {\n            type: 'line',\n            color: 'green'\n          },\n          2: {\n            type: 'line',\n            color: 'orange'\n          }\n        }\n      }\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let dailyDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('dailyDeaths'));\n\n      dailyDeathChart.draw(newData, options);\n    })\n  }\n\n  public refreshDailyDeathChart() {\n  }\n}\n","<div id='dailyDeaths'></div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from 'src/app/covidtracking/covidtracking.service';\n\nclass DailyTesting {\n  public date: string = '';\n  public tests: number = 0;\n  public positive: number = 0;\n  public sma: number = 0;\n  constructor(date: string, tests: number, positive: number, sma: number) {\n    this.date = date;\n    this.tests = tests;\n    this.positive = positive;\n    this.sma = sma;\n  }\n};\n\nclass DailyPositives {\n  public date: string = '';\n  public positiveRate: number = 0;\n  public sma: number = 0;\n  constructor(date: string, positiveRate: number, sma: number) {\n    this.date = date;\n    this.positiveRate = positiveRate;\n    this.sma = sma;\n  }\n};\n\n@Component({\n  selector: 'app-countrytesting',\n  templateUrl: './countrytesting.component.html',\n  styleUrls: ['./countrytesting.component.css']\n})\nexport class CountryTestingComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute,\n    private chartServices: GoogleChartService,\n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getCountryDaily();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  public getCountryDaily() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      // Collect the data\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let dailyTesting: DailyTesting[] = [];\n      let dailyPositive: DailyPositives[] = [];\n      let startDate = this.convertDate(sorted[0].date.toString());\n      dailyTesting.push(new DailyTesting(startDate, sorted[0].totalTestResults, sorted[0].positive, sorted[0].negative));\n      let basePositiveRate = sorted[0].positiveIncrease / sorted[0].totalTestResultsIncrease;\n      dailyPositive.push(new DailyPositives(startDate, basePositiveRate, basePositiveRate));\n      for (let i = 1; i < sorted.length; i++) {\n        let dateStr = this.convertDate(sorted[i].date.toString());\n        let positiveRate = sorted[i].positiveIncrease / sorted[i].totalTestResultsIncrease;\n        if (i > 2) {\n          let positivesma = (\n            sorted[i - 3].positiveIncrease +\n            sorted[i - 2].positiveIncrease +\n            sorted[i - 1].positiveIncrease) / 3;\n          dailyTesting.push(new DailyTesting(dateStr, sorted[i].totalTestResultsIncrease, sorted[i].positiveIncrease, positivesma));\n\n          let positiveRate3Sma = (\n            sorted[i - 3].positiveIncrease / sorted[i - 3].totalTestResultsIncrease +\n            sorted[i - 2].positiveIncrease / sorted[i - 2].totalTestResultsIncrease +\n            sorted[i - 1].positiveIncrease / sorted[i - 1].totalTestResultsIncrease\n          ) / 3;\n          dailyPositive.push(new DailyPositives(dateStr, sorted[i].positiveIncrease / sorted[i].totalTestResultsIncrease, positiveRate3Sma));\n\n        } else {\n          dailyTesting.push(new DailyTesting(dateStr, sorted[i].positiveIncrease, sorted[i].positiveIncrease, sorted[i].positiveIncrease));\n          dailyPositive.push(new DailyPositives(dateStr, positiveRate, positiveRate));\n        }\n      }\n\n      let rawData: any[][] = [['Date', 'Positive', 'Tests', 'SMA']];\n      dailyTesting.forEach((datum: DailyTesting) => {\n        let data = [datum.date, datum.positive, datum.tests, datum.sma];\n        rawData.push(data);\n      });\n\n      let options = {\n        title: 'Daily Positive (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n        isStacked: true,\n        series: {\n          0: {\n            color: 'blue'\n          },\n          1: {\n            color: 'green'\n          },\n          2: {\n            type: 'line',\n            color: 'orange'\n          }\n        }\n      }\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let dailyPositiveChart = new this.gLib.visualization.ComboChart(document.getElementById('dailyTesting'));\n\n      dailyPositiveChart.draw(newData, options);\n    })\n  }\n\n}\n","<div id='dailyTesting'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport {\n  CovidTrackingService,\n  USHistoricalDaily,\n} from 'src/app/covidtracking/covidtracking.service';\n\nclass TotalDeaths {\n  public date: string = '';\n  public deaths: number = 0;\n  constructor(date: string, deaths: number) {\n    this.date = date;\n    this.deaths = deaths;\n  }\n};\n\n@Component({\n  selector: 'app-countrytotaldeaths',\n  templateUrl: './countrytotaldeaths.component.html',\n  styleUrls: ['./countrytotaldeaths.component.css']\n})\nexport class CountryTotalDeathsComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute,\n    private chartServices: GoogleChartService,\n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n  \n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getCountryDaily();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  public getCountryDaily() {\n    this.covidTrackingServices.getCountryDaily().subscribe((data: USHistoricalDaily[]) => {\n      // Collect the data\n      let sorted = data.sort((a: USHistoricalDaily, b: USHistoricalDaily) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      // Collect daily deaths\n      let rawData: any[][] = [['Date', 'Deaths']];\n      sorted.forEach( (d: USHistoricalDaily) => {\n        rawData.push( [this.convertDate(d.date.toString()), d.death]);\n\n      })\n\n      // Collect daily testing\n      let options = {\n        title: 'Total Deaths (US)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let newData = this.gLib.visualization.arrayToDataTable(rawData);\n      let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('totalDeaths'));\n\n      totalDeathChart.draw(newData, options);\n      })\n    }\n\n}\n","<div id='totalDeaths'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statedeaths',\n  templateUrl: './statetotaldeaths.component.html',\n  styleUrls: ['./statetotaldeaths.component.css']\n})\nexport class StateTotalDeathsComponent implements OnInit {\n  private gLib: any = null;\n  constructor(\n      route: ActivatedRoute, \n      private chartServices: GoogleChartService, \n      private covidTrackingServices: CovidTrackingService\n  ) {\n  }\n\n  ngOnInit() {\n      this.checkLoading();\n  }\n\n  private checkLoading() {\n      if(this.chartServices.getLoaded()) {\n          this.gLib = this.chartServices.getGoogle();\n          this.getStateHistorical();\n      } else {\n          // Check again in 3 seconds\n          setTimeout(this.checkLoading, 1000);\n      }\n  }\n\n  public convertDate(oldDate: string) {\n      return oldDate.slice(4,6) + '-' + oldDate.slice(6,8) + '-' + oldDate.slice(0,4);\n  }\n  \n  private getStateHistorical() {\n    let state='UT';\n    this.covidTrackingServices.getHistoricalByState(state).subscribe((data: StateHistorical[]) => {\n        const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n            return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n        });\n\n        let rawData: any[][] = [['Date','Deaths']];\n        stateData.forEach( (d: StateHistorical) => {\n            rawData.push( [this.convertDate(d.date.toString()), d.deathIncrease]);\n        });\n        let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n        let options = {\n            title: 'Daily Deaths (' + state + ')',\n            width: 1100,\n            height: 700,\n            seriesType: 'bars',\n        };\n\n        let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('stateDeaths'));\n\n        totalDeathChart.draw(chartData, options);\n\n    });\n  }\n}\n","<div id='stateDeaths'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statehospitalized',\n  templateUrl: './statehospitalized.component.html',\n  styleUrls: ['./statehospitalized.component.css']\n})\nexport class StateHospitalizedComponent implements OnInit {\n  private gLib: any = null;\n  constructor(\n    route: ActivatedRoute, \n    private chartServices: GoogleChartService, \n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getStateHistorical();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  private getStateHistorical() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      let rawData: any[][] = [['Date', 'Hospitalizations']];\n      stateData.forEach((d: StateHistorical) => {\n        rawData.push([this.convertDate(d.date.toString()), d.hospitalizedIncrease]);\n      });\n      let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n      let options = {\n        title: 'Currently In Hospital (UT)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let totalDeathChart = new this.gLib.visualization.ComboChart(document.getElementById('hospitalizations'));\n      totalDeathChart.draw(chartData, options);\n    });\n  }\n\n}\n","<div id=\"hospitalizations\"></div>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-stateicu',\n  templateUrl: './stateicu.component.html',\n  styleUrls: ['./stateicu.component.css']\n})\nexport class StateIcuComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute, \n    private chartServices: GoogleChartService, \n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getStateHistorical();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  private getStateHistorical() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n    let rawData: any[][] = [['Date', 'ICU']];\n    stateData.forEach((d: StateHistorical) => {\n      rawData.push([this.convertDate(d.date.toString()), d.hospitalizedIncrease]);\n    });\n    let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n    let options = {\n      title: 'Currently in ICU (UT)',\n      width: 1100,\n      height: 700,\n      seriesType: 'bars',\n    };\n\n    let icuChart = new this.gLib.visualization.ComboChart(document.getElementById('icu'));\n\n    icuChart.draw(chartData, options);\n\n    });\n  }\n}\n","<div id=\"icu\"></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-statetesting',\n  templateUrl: './statetesting.component.html',\n  styleUrls: ['./statetesting.component.css']\n})\nexport class StateTestingComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n      route: ActivatedRoute, \n      private chartServices: GoogleChartService, \n      private covidTrackingServices: CovidTrackingService\n  ) {\n  }\n\n  ngOnInit() {\n      this.checkLoading();\n  }\n\n  private checkLoading() {\n      if(this.chartServices.getLoaded()) {\n          this.gLib = this.chartServices.getGoogle();\n          this.getStateHistorical();\n      } else {\n          // Check again in 3 seconds\n          setTimeout(this.checkLoading, 1000);\n      }\n  }\n\n  public convertDate(oldDate: string) {\n      return oldDate.slice(4,6) + '-' + oldDate.slice(6,8) + '-' + oldDate.slice(0,4);\n  }\n  \n  private getStateHistorical() {\n    let state='UT';\n    this.covidTrackingServices.getHistoricalByState(state).subscribe((data: StateHistorical[]) => {\n        const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n            return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n        });\n\n        let rawData: any[][] = [['Date', 'Positive']];\n        rawData.push( [this.convertDate(stateData[0].date.toString()), stateData[0].positive]);\n        for(let index=1; index<stateData.length; index++) {\n          let testingDelta = stateData[index].totalTestResults - stateData[index-1].totalTestResults;\n          let positiveDelta = stateData[index].positive - stateData[index-1].positive;\n          rawData.push( [this.convertDate(stateData[index].date.toString()), positiveDelta]);\n        }\n        let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n        let options = {\n            title: 'Daily Positive Tests (' + state + ')',\n            width: 1100,\n            height: 700,\n            seriesType: 'bars',\n        };\n\n        let totalStateTesting = new this.gLib.visualization.ComboChart(document.getElementById('statetesting'));\n\n        totalStateTesting.draw(chartData, options);\n\n    });\n  }\n}\n","<div id='statetesting'></div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { GoogleChartService } from '../../../google-chart/google-chart.service';\nimport { \n    CovidTrackingService,\n    StateHistorical,\n} from 'src/app/covidtracking/covidtracking.service';\n\n@Component({\n  selector: 'app-stateventilator',\n  templateUrl: './stateventilator.component.html',\n  styleUrls: ['./stateventilator.component.css']\n})\nexport class StateVentilatorComponent implements OnInit {\n  private gLib: any = null;\n\n  constructor(\n    route: ActivatedRoute, \n    private chartServices: GoogleChartService, \n    private covidTrackingServices: CovidTrackingService\n  ) { }\n\n  ngOnInit() {\n    this.checkLoading();\n  }\n\n  private checkLoading() {\n    if (this.chartServices.getLoaded()) {\n      this.gLib = this.chartServices.getGoogle();\n      this.getStateHistorical();\n    } else {\n      // Check again in 3 seconds\n      setTimeout(this.checkLoading, 1000);\n    }\n  }\n\n  public convertDate(oldDate: string) {\n    return oldDate.slice(4, 6) + '-' + oldDate.slice(6, 8) + '-' + oldDate.slice(0, 4);\n  }\n\n  private getStateHistorical() {\n    this.covidTrackingServices.getHistoricalByState('ut').subscribe((data: StateHistorical[]) => {\n      const stateData = data.sort((a: StateHistorical, b: StateHistorical) => {\n        return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n      });\n\n      let rawData: any[][] = [['Date', 'Ventilator']];\n      stateData.forEach((d: StateHistorical) => {\n        rawData.push([this.convertDate(d.date.toString()), d.onVentilatorCurrently]);\n      });\n      let chartData = this.gLib.visualization.arrayToDataTable(rawData);\n\n      let options = {\n        title: 'Currently On Ventilator (UT)',\n        width: 1100,\n        height: 700,\n        seriesType: 'bars',\n      };\n\n      let ventilatorChart = new this.gLib.visualization.ComboChart(document.getElementById('ventilator'));\n      ventilatorChart.draw(chartData, options);\n    });\n  }\n}\n","<div id=\"ventilator\"></div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface USDailySnapshot {\r\n    positive: number;\r\n    negative: number;\r\n    pending: number;\r\n    hospitalizedCurrently: number;\r\n    hospitalizedCumulative: number;\r\n    inIcuCurrently: number;\r\n    inIcuCumulative: number;\r\n    onVentilatorCurrently: number;\r\n    onVentilatorCumulative: number;\r\n    recovered: number;\r\n    hash: number;\r\n    lastModified: string;\r\n    death: number;\r\n    hospitalized: number;\r\n    total: number;\r\n    totalTestResults: number;\r\n    posNeg: number;\r\n};\r\n\r\nexport interface USHistoricalDaily {\r\n    date: number;\r\n    dateChecked: string;\r\n    death: number;\r\n    deathIncrease: number;\r\n    hash: string;\r\n    hospitalized: number;\r\n    hospitalizedCumulative: number;\r\n    hospitalizedCurrently: number;\r\n    hospitalizedIncrease: number;\r\n    inIcuCumulative: number;\r\n    inIcuCurrently: number;\r\n    negative: number;\r\n    negativeIncrease: number;\r\n    onVentilatorCumulative: number;\r\n    onVentilatorCurrently: number;\r\n    pending: number;\r\n    posNeg: number;\r\n    positive: number;\r\n    positiveIncrease: number;\r\n    recovered: number;\r\n    states: number;\r\n    total: number;\r\n    totalTestResults: number;\r\n    totalTestResultsIncrease: number;\r\n};\r\n\r\n// Check the Covid Tracking Project site for information on these fields\r\n// https://covidtracking.com/api#swaggerWrapper\r\nexport interface StateHistorical {\r\n  date: number;\r\n  state: string;\r\n  positive: number;\r\n  negative: number;\r\n  pending: number;\r\n  hospitalizedCurrently: number;\r\n  hospitalizedCumulative: number;\r\n  inIcuCurrently: number;\r\n  inIcuCumulative: number;\r\n  onVentilatorCurrently: number;\r\n  onVentilatorCumulative: number;\r\n  recovered: number;\r\n  hash: string;\r\n  dateChecked: string;\r\n  death: number;\r\n  hospitalized: number;\r\n  total: number;\r\n  totalTestResults: number;\r\n  posNeg: number;\r\n  fips: string;\r\n  deathIncrease: number;\r\n  hospitalizedIncrease: number;\r\n  negativeIncrease: number;\r\n  positiveIncrease: number;\r\n  totalTestResultsIncrease: number;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class CovidTrackingService {\r\n  private dataHost = 'http://ec2-3-95-10-127.compute-1.amazonaws.com:9000';\r\n  //private dataHost = 'http://localhost:9000';\r\n  private usData = '/api/us/current';\r\n  private usDaily = '/api/us/daily';\r\n  private stateHistorical = '/api/states/historical';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  public getCountryData(): Observable<USDailySnapshot[]> { \r\n    return this.http.get<USDailySnapshot[]>(this.dataHost + this.usData);\r\n  }\r\n\r\n  public getCountryDaily(): Observable<USHistoricalDaily[]> {\r\n    return this.http.get<USHistoricalDaily[]>(this.dataHost + this.usDaily);\r\n  }\r\n\r\n  public getStateHistorical(): Observable<StateHistorical[]> {\r\n    return this.http.get<StateHistorical[]>(this.dataHost + this.stateHistorical);\r\n  }\r\n\r\n  public getHistoricalByState(state: string): Observable<StateHistorical[]> {\r\n    let params = new HttpParams().set('state', 'ut');\r\n    return this.http.get<StateHistorical[]>(this.dataHost + this.stateHistorical, { params });\r\n  }\r\n}","import { Injectable } from '@angular/core';\n\ndeclare var google: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GoogleChartService {\n  private google: any;\n  private loaded: boolean = false;\n  \n  constructor() { \n    this.google = google;\n    this.google.charts.load('current', {'packages': ['corechart']});\n    this.google.charts.setOnLoadCallback(this.setLoaded());\n  }\n\n  public setLoaded() {\n    this.loaded = true;\n  }\n\n  public getLoaded() {\n    return this.loaded;\n  }\n\n  public getGoogle() {\n    return this.google;\n  }\n}\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n/**\n * Module class for application http interceptor.\n * @implements HttpInterceptor\n * @class AppHttpInterceptorService.\n */\n@Injectable()\nexport class AppHttpInterceptorService implements HttpInterceptor {\n\n  constructor() {\n  }\n\n  public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next\n      .handle(req)\n      .pipe(catchError(err => {\n        if (err instanceof HttpErrorResponse) {\n          this.onError(err);\n        }\n        return throwError(err);\n      }));\n  }\n\n  /**\n   * Handle http errors.\n   * @param response - ErrorResponse.\n   */\n  private onError(response: HttpErrorResponse): void {\n    const clientErrorMessage = this.handleClientSideError(response.status);\n    if (clientErrorMessage) {\n      // show client side error\n      return;\n    }\n\n    const serverErrorMessage = this.handleServerError(response.error);\n    if (serverErrorMessage) {\n      // show server error\n    }\n  }\n\n  private handleClientSideError(status: number): string | undefined {\n    switch (status) {\n      case 0:\n        return 'NO INTERNET CONNECTION';\n      case 404:\n        return 'REQUEST FAILURE';\n      default:\n        return;\n    }\n  }\n\n  private handleServerError(errorResponse: any): string {\n    // handle server error\n    return '';\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}